<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jinelei.live.dao.ViUserSubscribeMapper">
  <resultMap id="BaseResultMap" type="cn.jinelei.live.model.data.ViUserSubscribe">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="room_name" jdbcType="VARCHAR" property="roomName" />
    <result column="room_status" jdbcType="INTEGER" property="roomStatus" />
    <result column="room_screenshot" jdbcType="VARCHAR" property="roomScreenshot" />
    <result column="room_introduce" jdbcType="VARCHAR" property="roomIntroduce" />
    <result column="stream_key" jdbcType="VARCHAR" property="streamKey" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="category_introduce" jdbcType="VARCHAR" property="categoryIntroduce" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_height" jdbcType="INTEGER" property="userHeight" />
    <result column="user_weight" jdbcType="INTEGER" property="userWeight" />
    <result column="user_area" jdbcType="INTEGER" property="userArea" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="user_treasure" jdbcType="INTEGER" property="userTreasure" />
    <result column="subscriber_id" jdbcType="INTEGER" property="subscriberId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    room_id, room_name, room_status, room_screenshot, room_introduce, stream_key, category_id, 
    category_name, category_introduce, user_id, user_name, user_nickname, user_sex, user_age, 
    user_phone, user_email, user_height, user_weight, user_area, user_status, user_treasure, 
    subscriber_id
  </sql>
  <select id="selectByExample" parameterType="cn.jinelei.live.model.data.ViUserSubscribeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vi_user_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.jinelei.live.model.data.ViUserSubscribeExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from vi_user_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.jinelei.live.model.data.ViUserSubscribeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from vi_user_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update vi_user_subscribe
    <set>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.roomName != null">
        room_name = #{record.roomName,jdbcType=VARCHAR},
      </if>
      <if test="record.roomStatus != null">
        room_status = #{record.roomStatus,jdbcType=INTEGER},
      </if>
      <if test="record.roomScreenshot != null">
        room_screenshot = #{record.roomScreenshot,jdbcType=VARCHAR},
      </if>
      <if test="record.roomIntroduce != null">
        room_introduce = #{record.roomIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.streamKey != null">
        stream_key = #{record.streamKey,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null">
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryIntroduce != null">
        category_introduce = #{record.categoryIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=INTEGER},
      </if>
      <if test="record.userAge != null">
        user_age = #{record.userAge,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userHeight != null">
        user_height = #{record.userHeight,jdbcType=INTEGER},
      </if>
      <if test="record.userWeight != null">
        user_weight = #{record.userWeight,jdbcType=INTEGER},
      </if>
      <if test="record.userArea != null">
        user_area = #{record.userArea,jdbcType=INTEGER},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userTreasure != null">
        user_treasure = #{record.userTreasure,jdbcType=INTEGER},
      </if>
      <if test="record.subscriberId != null">
        subscriber_id = #{record.subscriberId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update vi_user_subscribe
    set room_id = #{record.roomId,jdbcType=INTEGER},
      room_name = #{record.roomName,jdbcType=VARCHAR},
      room_status = #{record.roomStatus,jdbcType=INTEGER},
      room_screenshot = #{record.roomScreenshot,jdbcType=VARCHAR},
      room_introduce = #{record.roomIntroduce,jdbcType=VARCHAR},
      stream_key = #{record.streamKey,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      category_introduce = #{record.categoryIntroduce,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=INTEGER},
      user_age = #{record.userAge,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_height = #{record.userHeight,jdbcType=INTEGER},
      user_weight = #{record.userWeight,jdbcType=INTEGER},
      user_area = #{record.userArea,jdbcType=INTEGER},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_treasure = #{record.userTreasure,jdbcType=INTEGER},
      subscriber_id = #{record.subscriberId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>