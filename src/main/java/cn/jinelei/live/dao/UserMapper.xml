<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jinelei.live.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.jinelei.live.model.data.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_height" jdbcType="INTEGER" property="userHeight" />
    <result column="user_weight" jdbcType="INTEGER" property="userWeight" />
    <result column="user_area" jdbcType="INTEGER" property="userArea" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="user_treasure" jdbcType="INTEGER" property="userTreasure" />
    <result column="user_passwd" jdbcType="VARCHAR" property="userPasswd" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    user_id, user_name, user_nickname, user_sex, user_age, user_phone, user_height, user_weight, 
    user_area, user_status, user_treasure, user_passwd, user_email
  </sql>
  <select id="selectByExample" parameterType="cn.jinelei.live.model.data.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.jinelei.live.model.data.UserExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.jinelei.live.model.data.UserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=INTEGER},
      </if>
      <if test="record.userAge != null">
        user_age = #{record.userAge,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userHeight != null">
        user_height = #{record.userHeight,jdbcType=INTEGER},
      </if>
      <if test="record.userWeight != null">
        user_weight = #{record.userWeight,jdbcType=INTEGER},
      </if>
      <if test="record.userArea != null">
        user_area = #{record.userArea,jdbcType=INTEGER},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userTreasure != null">
        user_treasure = #{record.userTreasure,jdbcType=INTEGER},
      </if>
      <if test="record.userPasswd != null">
        user_passwd = #{record.userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=INTEGER},
      user_age = #{record.userAge,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_height = #{record.userHeight,jdbcType=INTEGER},
      user_weight = #{record.userWeight,jdbcType=INTEGER},
      user_area = #{record.userArea,jdbcType=INTEGER},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_treasure = #{record.userTreasure,jdbcType=INTEGER},
      user_passwd = #{record.userPasswd,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="cn.jinelei.live.model.data.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_height" jdbcType="INTEGER" property="userHeight" />
    <result column="user_weight" jdbcType="INTEGER" property="userWeight" />
    <result column="user_area" jdbcType="INTEGER" property="userArea" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="user_treasure" jdbcType="INTEGER" property="userTreasure" />
    <result column="user_passwd" jdbcType="VARCHAR" property="userPasswd" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_nickname, user_sex, user_age, user_phone, user_height, user_weight, 
    user_area, user_status, user_treasure, user_passwd, user_email
  </sql>
  <select id="selectByExample" parameterType="cn.jinelei.live.model.data.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jinelei.live.model.data.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jinelei.live.model.data.User">
    insert into user (user_id, user_name, user_nickname, 
      user_sex, user_age, user_phone, 
      user_height, user_weight, user_area, 
      user_status, user_treasure, user_passwd, 
      user_email)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userNickname,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=INTEGER}, #{userAge,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, 
      #{userHeight,jdbcType=INTEGER}, #{userWeight,jdbcType=INTEGER}, #{userArea,jdbcType=INTEGER}, 
      #{userStatus,jdbcType=INTEGER}, #{userTreasure,jdbcType=INTEGER}, #{userPasswd,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jinelei.live.model.data.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userHeight != null">
        user_height,
      </if>
      <if test="userWeight != null">
        user_weight,
      </if>
      <if test="userArea != null">
        user_area,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="userTreasure != null">
        user_treasure,
      </if>
      <if test="userPasswd != null">
        user_passwd,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userHeight != null">
        #{userHeight,jdbcType=INTEGER},
      </if>
      <if test="userWeight != null">
        #{userWeight,jdbcType=INTEGER},
      </if>
      <if test="userArea != null">
        #{userArea,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userTreasure != null">
        #{userTreasure,jdbcType=INTEGER},
      </if>
      <if test="userPasswd != null">
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jinelei.live.model.data.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=INTEGER},
      </if>
      <if test="record.userAge != null">
        user_age = #{record.userAge,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userHeight != null">
        user_height = #{record.userHeight,jdbcType=INTEGER},
      </if>
      <if test="record.userWeight != null">
        user_weight = #{record.userWeight,jdbcType=INTEGER},
      </if>
      <if test="record.userArea != null">
        user_area = #{record.userArea,jdbcType=INTEGER},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userTreasure != null">
        user_treasure = #{record.userTreasure,jdbcType=INTEGER},
      </if>
      <if test="record.userPasswd != null">
        user_passwd = #{record.userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=INTEGER},
      user_age = #{record.userAge,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_height = #{record.userHeight,jdbcType=INTEGER},
      user_weight = #{record.userWeight,jdbcType=INTEGER},
      user_area = #{record.userArea,jdbcType=INTEGER},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_treasure = #{record.userTreasure,jdbcType=INTEGER},
      user_passwd = #{record.userPasswd,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jinelei.live.model.data.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userHeight != null">
        user_height = #{userHeight,jdbcType=INTEGER},
      </if>
      <if test="userWeight != null">
        user_weight = #{userWeight,jdbcType=INTEGER},
      </if>
      <if test="userArea != null">
        user_area = #{userArea,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userTreasure != null">
        user_treasure = #{userTreasure,jdbcType=INTEGER},
      </if>
      <if test="userPasswd != null">
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jinelei.live.model.data.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_age = #{userAge,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_height = #{userHeight,jdbcType=INTEGER},
      user_weight = #{userWeight,jdbcType=INTEGER},
      user_area = #{userArea,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_treasure = #{userTreasure,jdbcType=INTEGER},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>